# The numbers in braces ({param_number}) indicate parameters coming from an external source. You can use these
# to output different strings, using the following format: {param_number,choice,conditions}. The conditions are
# already set, so just translate the latter part with the text.


# Initialisation of constellation boundaries with {0} points.
notif.boundaries.init=Constellations boundaries initialized with {0} points
# A number of constellations has been initialised. That number is in {0}.
notif.constellations.init={0} constellations initialized

# A number of objects has been loaded from a file. The number is in {0} and the file is in {1}.
notif.nodeloader={0} objects loaded from file {1}
# Renderer is being initialised.
notif.render.init=Initializing renderer and GUI
# The graphical user interface is being initialised.
notif.gui.init=Initializing GUI
# The scene graph tree is being initalised.
notif.sgtree.init=Initializing SG tree
# The scene graph tree is initialised.
notif.sgtree.initialised=SG tree initialized

# The scene graph has been initialised with a number of objects. That number is in {0}.
notif.sg.init=Scene graph initialized with {0,choice,0#no objects|1#one object|1<{0,number,integer} objects}

# We are initialising the icons
notif.icon.initialising=Initializing icons...
# The icons have been initialised. {0} contains the number of icons.
notif.icon.init={0} icons initialized

# {0} contains the number of attitude files found
notif.attitude.initialized=Gaia attitude list initialized using {0} attitude files


# Graphical User Interface

gui.gaiascan.colour=Color observed stars
# The stars will be coloured depending on the number of transits.
gui.gaiascan.transit=Transit density color


gui.data.dschooser=Select catalog at startup


# ================
# === TOOLTIPS ===
# ================

# Spacecraft stabilise
gui.tooltip.sc.stabilise=Stabilize spacecraft rotation
